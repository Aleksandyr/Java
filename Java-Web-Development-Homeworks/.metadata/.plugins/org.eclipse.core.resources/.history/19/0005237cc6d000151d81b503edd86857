package bg.jwd.ejb;

import java.util.Map;

import javax.ejb.EJB;
import javax.ejb.Stateful;
import javax.servlet.http.HttpServletRequest;

@Stateful
public class BankOperationImpl implements BankOperation {

	@EJB
	private UserOperation userOperation;
	
	private double currAmountForUser = Double.NaN;
	
	@Override
	public void deposite(Map<String, Double> users, String currentUser, double depositMoney) {
		double userAmount = userOperation.getUserAmount(users, currentUser);
		
		if(depositMoney > 0){
			userAmount += depositMoney;
		}
		
			
		users.put(currentUser, userAmount);
	}

	@Override
	public void withdraw(Map<String, Double> users, String currentUser, double withdrawMoney,
			Double currUserMoney) {
		double userAmount = userOperation.getUserAmount(users, currentUser);
		double allUserAmound = getCurrAmountFromUser(users, currentUser);
		double userAmountInAHalf = allUserAmound / 2;
		
		if(withdrawMoney > 0 && 
				withdrawMoney <= userAmount &&
				userAmount > userAmountInAHalf){
			
			userAmount -= withdrawMoney;
		}
		
		
		users.put(currentUser, userAmount);
	}	
	
	private Double getCurrAmountFromUser(Map<String, Double> users, String username){
		if(this.currAmountForUser == Double.NaN){
			this.currAmountForUser = users.get(username);
		}
		
		return this.currAmountForUser;
	}
}
